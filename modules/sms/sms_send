#!/bin/bash 


dir=$( cd "$( dirname "$0" )" && cd ../../ && pwd )
date=`date +%y%m%d-%H%M%S`

nr=`sqlite3 -cmd ".timeout 2000" $dir/dbf/nettemp.db "SELECT tel FROM users WHERE smsa='yes'" | awk '{ printf " "$1 }'`

mkdir -p $dir/tmp/sms

temp_scale=`sqlite3 -cmd ".timeout 2000" $dir/dbf/nettemp.db "SELECT value FROM nt_settings WHERE option='temp_scale'"`

check_alarm() {
for line in `sqlite3 -cmd ".timeout 2000" $dir/dbf/nettemp.db "SELECT name,tmp,tmp_min,tmp_max,type FROM sensors WHERE alarm='on'"| sed 's/ /_/g'`; 
    do
	for line2 in $nr
	    do
		line2=$(echo $line2 |sed 's/ //g')
		name=`echo $line | awk 'BEGIN {FS="|"}{print $1}'`
		tmp=`echo $line | awk 'BEGIN {FS="|"}{print $2}'`
		tmp_min=`echo $line | awk 'BEGIN {FS="|"}{print $3}'`
		tmp_max=`echo $line | awk 'BEGIN {FS="|"}{print $4}'`
		type=$(echo $line | awk 'BEGIN {FS="|"}{print $5}' | sed 's/|/ /g' | sed 's/press/hPa/g' | sed 's/temp/'$temp_scale'/g' | sed 's/humid/%/g' | sed 's/volt/V/g' | sed 's/amps/A/g' | sed 's/watt/W/g' | sed 's/water/m3/g' | sed 's/gas/m3/g' | sed 's/elec/kWh/g')
		plik=/var/spool/sms/outgoing/sms-$name-$line2
		sent=/var/spool/sms/sent/sms-$name-$line2
		failed=/var/spool/sms/failed/sms-$name-$line2
		if [ -n "$tmp_max" ]; then
			cr_ge=$(echo $tmp $tmp_max | awk '{if ($1 > $2) print 1; else print 0 }')
		else
		    if grep -q -s HIGH $sent; then
			rm -f $sent
			echo "clear HIGH $sent"
		    fi
		    cr_ge=0;
		fi
		if [ -n "$tmp_min" ]; then
			cr_le=$(echo $tmp $tmp_min | awk '{if ($1 < $2) print 1; else print 0 }')
		else
		    if  grep -q -s LOW $sent; then
			rm -f $sent
			echo "clear LOW $sent"
		    fi
		    cr_le=0
		fi
		if [[ ! -f $sent ]] || [[ -f $failed ]] || grep -q -s RECOVERY $sent; then
			if [[ $cr_ge == 1 ]]; then
			    echo "To: $line2" > $plik; 
			    echo "" >> $plik; 
			    echo "HIGH $name $tmp $type" >> $plik;
			    echo "Send HIGH $sent"
			fi
			if [[ $cr_le == 1 ]]; then  
			    echo "To: $line2" > $plik; 
			    echo "" >> $plik; 
			    echo "LOW $name $tmp $type" >> $plik; 
			    echo "Send LOW $sent"
			fi
		    rm -f $failed
		elif  ! grep -q -s RECOVERY  $sent && [[ $cr_ge == 0 ]] && [[ $cr_le == 0 ]]; then
			    echo "To: $line2" > $plik; 
			    echo "" >> $plik; 
			    echo "RECOVERY $name $tmp $type" >> $plik; 
			    rm -f $sent
			    echo "Send RECOVERY $sent"
		else
		    echo "Already sent $sent"
		fi
	    done
done
}




check_alarm



