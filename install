#! /bin/bash

R='\033[0m'
RED='\033[00;31m'
REDB='\033[01;41;35m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'

if [[ $UID -ne 0 ]]; then
    whiptail --title "Nettemp installer" --msgbox "You must be root. Hit OK to exit." 8 78
exit 1
fi 

function fexit {
$1
exitstatus=$?
if [ $exitstatus = 1 ]; then
    whiptail --clear  --title "Nettemp installer" --msgbox "Error $1" 8 78
    echo -e "[ ${red}error${R} ] Error in $1"
    exit 1
else
    echo -e "[ ${GREEN}ok${R} ] $1"
fi
}

function end {
whiptail  --title "Nettemp installer" --msgbox "Nettemp successfully installed. Your user and password is \"admin\"." 8 78
whiptail  --title "Nettemp installer" --msgbox "admin admin - remember!" 8 78
exitstatus=$?
if [ $exitstatus = 0 ]; then
    if int=$(ifconfig eth0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://'); then
	echo -e "[ ${GREEN}ok${R} ] Go to http://$int"
    else
	int=$(ifconfig wlan0 2>/dev/null|awk '/inet addr:/ {print $2}'|sed 's/addr://')
	echo -e "[ ${GREEN}ok${R} ] Go to http://$int"
    fi
    echo -e "Bye..."
    exit 1
fi
}

function checkifrpi {
rpi=$(cat /proc/cmdline | awk -v RS=" " -F= '/boardrev/ { print $2 }')
if [ -n "$rpi" ]; then
    echo -e "[ ${GREEN}ok${R} ] Raspberry Pi detected"
else
    echo -e "[ ${GREEN}ok${R} ] no Raspberry Pi detected"
fi
}

function services {
service ntp start
service lighttpd restart
}

function perms {
chown -R root.www-data /var/www/nettemp
chmod -R 775 /var/www/nettemp
gpasswd -a www-data dialout 1>/dev/null
sed -i '$a www-data ALL=(ALL) NOPASSWD: /bin/chmod *, /bin/chown *, /bin/chgrp *, /sbin/reboot' /etc/sudoers
sed -i '$a www-data ALL=(ALL) NOPASSWD: /usr/bin/whoami, /usr/bin/killall *, /usr/bin/nohup *' /etc/sudoers
sed -i '$a www-data ALL=(ALL) NOPASSWD: /usr/bin/pkill -f nettemp_kwh' /etc/sudoers
sed -i '$a www-data ALL=(ALL) NOPASSWD: /sbin/iptables *, /sbin/iptables-save *' /etc/sudoers
sed -i '$a www-data ALL=(ALL) NOPASSWD: /usr/sbin/chpasswd *, /usr/sbin/useradd *, /usr/sbin/userdel *, /usr/sbin/groupadd' /etc/sudoers
sed -i '$a www-data ALL=(ALL) NOPASSWD: /usr/sbin/i2cdetect *' /etc/sudoers
}

function i2c {
if [ -n "$rpi" ]; then
    if cat /etc/modules |grep i2c-bcm2708 1> /dev/null; then
	echo -e "[ ${GREEN}ok${R} ] i2c-bcm2708  allready added"
    else
	sed -i '$ai2c-bcm2708' /etc/modules
    fi
    sed -i 's/blacklist spi-bcm2708/#blacklist spi-bcm2708/g' /etc/modprobe.d/raspi-blacklist.conf
    sed -i 's/blacklist i2c-bcm2708/#blacklist i2c-bcm2708/g' /etc/modprobe.d/raspi-blacklist.conf
fi

    if cat /etc/modules |grep i2c-dev 1> /dev/null; then
	echo -e "[ ${GREEN}ok${R} ] i2c-dev allready added"
    else
	sed -i '$ai2c-dev' /etc/modules
    fi
    if cat /etc/modules |grep ds2482 1> /dev/null; then
	echo -e "[ ${GREEN}ok${R} ] ds2482 allready added"
    else
	sed -i '$ads2482' /etc/modules
    fi
}

function ups {
if dpkg --get-selections | grep apcupsd 1>/dev/null; then
    echo -e "[ ${GREEN}ok${R} ] ups function already installed"
    else
    /var/www/nettemp/modules/ups/install
fi
}
function vpn {
    echo -e "[ ${GREEN}ok${R} ] Generating certs for OpenVPN. Please wait.."
    {
    /var/www/nettemp/modules/security/vpn/install
    } &> /dev/null
}

function firewall {
    /var/www/nettemp/modules/security/fw/install
} &> /dev/null



function 1wire {
if cat /etc/modules |grep w1_ 1> /dev/null; then
echo -e "[ ${GREEN}ok${R} ] 1-wire modules allready added"
else
    if [ -n "$rpi" ];then
    echo "w1_gpio" | sudo tee -a /etc/modules
    modprobe w1_gpio
    fi
echo "w1_therm" | sudo tee -a /etc/modules
modprobe w1_therm
fi
}

function wiringpi {
if [ -n "$rpi" ];then
    if ! which gpio 1> /dev/null; then
        git clone git://git.drogon.net/wiringPi
	cd wiringPi
	./build
    else
	echo -e "[ ${GREEN}ok${R} ] WiringPi already installed"
    fi
fi
}
# echo -e "${GREEN}Add watchdog${R}"
# update-rc.d watchdog defaults
# if cat /etc/modules |grep bcm2708_wdog 1> /dev/null
# then
# echo "bcm2708_wdog exist in file"
# else
# echo "bcm2708_wdog" | sudo tee -a /etc/modules
# fi
# sed -i -e '10s/#max-load-1/max-load-1/' /etc/watchdog.conf
# sed -i -e '23s/#watchdog-device/watchdog-device/' /etc/watchdog.conf
# /etc/init.d/watchdog start
#fi
#}

function cron {
if crontab -l |grep nettemp 1> /dev/null; then
echo -e "[ ${GREEN}ok${R} ] Cron lines already exist"
else
echo "*/1 * * * * /var/www/nettemp/modules/cron/1" > /var/spool/cron/crontabs/root
echo "*/5 * * * * /var/www/nettemp/modules/cron/5" >> /var/spool/cron/crontabs/root
echo "0 * * * * /var/www/nettemp/modules/cron/1h" >> /var/spool/cron/crontabs/root
echo "@reboot /var/www/nettemp/modules/cron/r" >> /var/spool/cron/crontabs/root
chmod 600 /var/spool/cron/crontabs/root
fi
}

function download-nettemp {
cd /var/www
old=`echo $RANDOM`
if [ -d "nettemp" ]; then
     mv nettemp nettemp$old
     echo -e "[ ${GREEN}ok${R} ] old nettemp dir now is named nettemp$old"
fi
#git clone https://github.com/sosprz/nettemp 
#git clone --recursive git://github.com/sosprz/nettemp
git clone -b beta --recursive git://github.com/sosprz/nettemp
} &>/dev/null

function database {
/var/www/nettemp/modules/tools/db_reset
} &>/dev/null

function check-other-www-servers {
if dpkg --get-selections | grep apache; then
service apache2 stop
update-rc.d apache2 disable
echo -e "[ ${GREEN}ok${R} ] Looks like You have Apache, service was stoped, until reboot.$old"
fi
}

function www-server {
# enable fastcgi
lighty-enable-mod fastcgi-php 1>/dev/null
# enable modrewrite
sed -i -e 's/#       "mod_rewrite",/ "mod_rewrite",/g' /etc/lighttpd/lighttpd.conf
# www dir
sed -i -e 's/server.document-root        = \"\/var\/www\"/server.document-root        = \"\/var\/www\/nettemp\"/g' /etc/lighttpd/lighttpd.conf
# didable dir access
sed -i '/url.access-deny/d' /etc/lighttpd/lighttpd.conf
sed -i '$a url.access-deny = ( "~", ".inc", ".dbf", ".db", ".txt", ".rrd" )' /etc/lighttpd/lighttpd.conf
# set url rewrite
if cat /etc/lighttpd/lighttpd.conf |grep url.rewrite-once 1> /dev/null; then
echo -e "[ ${GREEN}ok${R} ] lighttpd: Url rewrite exist"
else
echo "url.rewrite-once = ( \"^/([A-Za-z0-9-_-]+)\$\" => \"/index.php?id=\$1\" )" >> /etc/lighttpd/lighttpd.conf
fi
# htaccess
if cat /etc/lighttpd/lighttpd.conf |grep Password 1> /dev/null ; then
echo -e "[ ${GREEN}ok${R} ] lighttpd: Password already set"
else
sed -i '$aauth.debug = 2' /etc/lighttpd/lighttpd.conf
sed -i '$aauth.backend = "plain"' /etc/lighttpd/lighttpd.conf
sed -i '$aauth.backend.plain.userfile = "/etc/lighttpd/.lighttpdpassword"' /etc/lighttpd/lighttpd.conf
sed -i '$aauth.require = ( "/" =>' /etc/lighttpd/lighttpd.conf
sed -i '$a(' /etc/lighttpd/lighttpd.conf
sed -i '$a"method" => "basic",' /etc/lighttpd/lighttpd.conf
sed -i '$a"realm" => "Password protected area",' /etc/lighttpd/lighttpd.conf
sed -i '$a"require" => "user=admin"' /etc/lighttpd/lighttpd.conf
sed -i '$a)' /etc/lighttpd/lighttpd.conf
sed -i '$a)' /etc/lighttpd/lighttpd.conf
sed -i '$a www-data ALL=(ALL) NOPASSWD: /usr/sbin/lighttpd-enable-mod *, /usr/sbin/lighttpd-disable-mod *' /etc/sudoers
touch /etc/lighttpd/.lighttpdpassword
chown www-data:www-data /etc/lighttpd/.lighttpdpassword
echo "admin:admin" > /etc/lighttpd/.lighttpdpassword
lighttpd-enable-mod auth
fi
# php.ini upload file max size
sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 300M/g' /etc/php5/cgi/php.ini
sed -i 's/post_max_size = 8M/post_max_size = 300M/g' /etc/php5/cgi/php.ini
}

function packages { 
echo -e "[ ${GREEN}ok${R} ] Installing packages. Please wait.."
{
package="lighttpd php5-cgi php5-sqlite rrdtool sqlite3 msmtp digitemp gammu git-core mc sysstat \
    sharutils bc htop snmp sudo ntp watchdog python-smbus i2c-tools openvpn iptables rcconf arp-scan snmpd httping fping make gcc"
    apt-get -y install $package
} &> /dev/null
}

function update {
    echo -e "[ ${GREEN}ok${R} ] apt-get repo updating. Please wait.."
    {
    apt-get -y update
    } &> /dev/null
}

function start {
whiptail  --backtitle "Nettemp.pl" --title "Nettemp installer" --yesno "Do You want install nettemp?" 8 78
exitstatus=$?
if [ $exitstatus = 1 ]; then
    echo "bye.."
    exit 1
fi

}


start
fexit checkifrpi
fexit update
fexit packages
fexit check-other-www-servers
fexit www-server
fexit download-nettemp
fexit database
fexit cron
fexit wiringpi
fexit 1wire
fexit ups
fexit vpn
fexit firewall
fexit i2c
fexit perms
fexit services
end

#echo "(Exit status was $exitstatus)"

